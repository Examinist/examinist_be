---
openapi: 3.0.1
info:
  title: Examinist API
  version: v1
  description: This is Examinist API documentation
paths:
  "/staff_portal/courses/{course_id}/course_groups":
    get:
      summary: List Course Groups of a specific Course
      tags:
      - Staff Portal / Course Group
      description: |-
        This API is responsible for:

              * Listing the Course Groups of a specific Course
      operationId: listCourseGroups
      parameters:
      - "$ref": "#/components/global_parameters/course_id_param"
      security:
      - staff_auth: []
      responses:
        '200':
          description: Course Groups Listed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/list/course_groups_list"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
        '404':
          description: You may have no access to this course or it doesnt exist
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/not_found"
  "/staff_portal/courses":
    get:
      summary: List Courses
      tags:
      - Staff Portal / Course
      description: |-
        This API is responsible for:

              * Listing the Courses
      operationId: listCourses
      parameters:
      - "$ref": "#/components/global_parameters/page_param"
      security:
      - staff_auth: []
      responses:
        '200':
          description: Courses Listed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/list/courses_list"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
  "/staff_portal/courses/{id}":
    get:
      summary: Show Course Info
      tags:
      - Staff Portal / Course
      description: |-
        This API is responsible for:

              * Showing the Course Info
      operationId: showCourse
      parameters:
      - "$ref": "#/components/global_parameters/id_param"
      security:
      - staff_auth: []
      responses:
        '200':
          description: Course Info Showed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/show/course_info"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
        '404':
          description: You may have no access to this course or it doesnt exist
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/not_found"
  "/staff_portal/courses/{course_id}/question_types":
    get:
      summary: List Question Types of a specific Course
      tags:
      - Staff Portal / Question Types
      description: |-
        This API is responsible for:

              * Listing the Question Types of a specific Course
      operationId: listQuestionTypes
      parameters:
      - "$ref": "#/components/global_parameters/course_id_param"
      security:
      - staff_auth: []
      responses:
        '200':
          description: Question Types Listed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/list/question_types"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
        '404':
          description: You may have no access to this item or it doesnt exist
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/not_found"
    post:
      summary: Create Question Types for a specific Course
      tags:
      - Staff Portal / Question Types
      description: |-
        This API is responsible for:

              * Creating a Question Type for a specific Course
      operationId: createQuestionTYpe
      parameters:
      - "$ref": "#/components/global_parameters/course_id_param"
      security:
      - staff_auth: []
      responses:
        '201':
          description: Question Type Created successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/show/question_type"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
        '404':
          description: You may have no access to this item or it doesnt exist
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/not_found"
        '422':
          description: attribute already taken for question types in this course
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/already_taken"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Modeling
                easy_weight:
                  type: integer
                  example: 1
                medium_weight:
                  type: integer
                  example: 2
                hard_weight:
                  type: integer
                  example: 3
              required:
              - name
  "/staff_portal/courses/{course_id}/question_types/{id}":
    patch:
      summary: Update Question Type for a specific Course
      tags:
      - Staff Portal / Question Types
      description: |-
        This API is responsible for:

              * Updating a Question Type for a specific Course
      operationId: updateQuestionType
      parameters:
      - "$ref": "#/components/global_parameters/course_id_param"
      - "$ref": "#/components/global_parameters/id_param"
      security:
      - staff_auth: []
      responses:
        '201':
          description: Question Type Updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/show/question_type"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
        '404':
          description: You may have no access to this item or it doesnt exist
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/not_found"
        '400':
          description: Name can not be changed as it is a default question type
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/bad_request"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Modeling
                easy_weight:
                  type: integer
                  example: 1
                medium_weight:
                  type: integer
                  example: 2
                hard_weight:
                  type: integer
                  example: 3
    delete:
      summary: Delete Question Type for a specific Course
      tags:
      - Staff Portal / Question Types
      description: |-
        This API is responsible for:

              * Deleting a Question Type for a specific Course
      operationId: deleteQuestionType
      parameters:
      - "$ref": "#/components/global_parameters/course_id_param"
      - "$ref": "#/components/global_parameters/id_param"
      security:
      - staff_auth: []
      responses:
        '201':
          description: Question Type Deleted successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/show/question_type"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
        '404':
          description: You may have no access to this item or it doesnt exist
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/not_found"
        '400':
          description: You can not delete default question types
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/bad_request"
  "/staff_portal/sessions":
    post:
      summary: Staff Login
      tags:
      - Staff Portal / Session
      description: |-
        This API is responsible for:

              * Logging in the student and returning the staff's object

              * returning the Authentication Bearer token
      operationId: staffLogin
      parameters: []
      responses:
        '200':
          description: Staff logged in successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/staff_portal/show/staff_session"
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/invalid_credentials"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: marioma
                password:
                  type: string
                  example: '123456'
              required:
              - username
              - password
  "/student_portal/courses":
    get:
      summary: List Courses
      tags:
      - Student Portal / Course
      description: |-
        This API is responsible for:

              * Listing the Courses
      operationId: listCourses
      parameters:
      - "$ref": "#/components/global_parameters/page_param"
      security:
      - student_auth: []
      responses:
        '200':
          description: Courses Listed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/student_portal/list/courses_list"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
  "/student_portal/courses/{id}":
    get:
      summary: Show Course Info
      tags:
      - Student Portal / Course
      description: |-
        This API is responsible for:

              * Showing the Course Info
      operationId: showCourse
      parameters:
      - "$ref": "#/components/global_parameters/id_param"
      security:
      - student_auth: []
      responses:
        '200':
          description: Course Info Showed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/student_portal/show/course_info"
        '401':
          description: One of the following errors
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/unauthorized"
        '404':
          description: You may have no access to this course or it doesnt exist
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/not_found"
  "/student_portal/sessions":
    post:
      summary: Student Login
      tags:
      - Student Portal / Session
      description: |-
        This API is responsible for:

              * Logging in the student and returning the student's object

              * returning the Authentication Bearer token
      operationId: studentLogin
      parameters: []
      responses:
        '200':
          description: Student logged in successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/responses/student_portal/show/student_session"
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                "$ref": "#/components/errors/invalid_credentials"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: '18011769'
                password:
                  type: string
                  example: '123456'
              required:
              - username
              - password
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: localhost:3000/
components:
  securitySchemes:
    staff_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    student_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  global_parameters:
    id_param:
      name: id
      in: path
      description: The id to fetch with
      required: true
      schema:
        type: number
        example: 1
    page_param:
      name: page
      in: query
      description: The current page for paginated items, send it with value = -1 if
        no pagination needed
      schema:
        type: number
        example: -1
    course_id_param:
      name: course_id
      in: path
      description: The course id to fetch with
      required: true
      schema:
        type: number
        example: 1
  schemas:
    faculty:
      type: object
      properties:
        id:
          type: integer
          example: 1
        faculty_name:
          type: string
          example: Faculty of Engineering
        University_name:
          type: string
          example: Alexandria University
      required:
      - id
      - faculty_name
      - University_name
    detailed_student:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: ahmed.gamal5551.ag@gmail.com
        first_name:
          type: string
          example: Ahmed
        last_name:
          type: string
          example: Gamal
        username:
          type: string
          example: '18010083'
        faculty_id:
          type: integer
          example: 1
        academic_id:
          type: string
          example: '18010083'
      required:
      - id
      - email
      - first_name
      - last_name
      - username
      - faculty_id
      - academic_id
    student:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Ahmed
        last_name:
          type: string
          example: Gamal
        username:
          type: string
          example: '18010083'
        role:
          type: string
          example: student
      required:
      - id
      - first_name
      - last_name
      - username
      - role
    student_session:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Ahmed
        last_name:
          type: string
          example: Gamal
        username:
          type: string
          example: '18010083'
        role:
          type: string
          example: student
        auth_token:
          type: string
          example: hgcscxmopjsecohsecophopshcijsic
      required:
      - id
      - first_name
      - last_name
      - username
      - role
      - auth_token
    detailed_staff:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: ahmed.gamal5551.ag@gmail.com
        first_name:
          type: string
          example: Ahmed
        last_name:
          type: string
          example: Gamal
        username:
          type: string
          example: jimmy
        faculty_id:
          type: integer
          example: 1
        role:
          type: string
          example: instructor
      required:
      - id
      - email
      - first_name
      - last_name
      - username
      - faculty_id
      - role
    staff:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Ahmed
        last_name:
          type: string
          example: Gamal
        username:
          type: string
          example: jimmy
        role:
          type: string
          example: instructor
      required:
      - id
      - first_name
      - last_name
      - username
      - role
    staff_session:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Ahmed
        last_name:
          type: string
          example: Gamal
        username:
          type: string
          example: jimmy
        role:
          type: string
          example: instructor
        auth_token:
          type: string
          example: hgcscxmopjsecohsecophopshcijsic
      required:
      - id
      - first_name
      - last_name
      - username
      - role
      - auth_token
    course:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Database
        code:
          type: string
          example: CSE512
      required:
      - id
      - title
      - code
    course_group:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Group A
        end_date:
          type: date_time
          example: '2023-03-25T09:25:25.551Z'
        instructors:
          type: array
          items:
            "$ref": "#/components/schemas/staff"
        students:
          type: array
          items:
            "$ref": "#/components/schemas/student"
      required:
      - id
      - end_date
      - instructors
      - students
    detailed_course_info:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Database
        code:
          type: string
          example: CSE512
        credit_hours:
          type: integer
          example: 3
        instructors:
          type: array
          items:
            "$ref": "#/components/schemas/staff"
        students:
          type: array
          items:
            "$ref": "#/components/schemas/student"
      required:
      - id
      - title
      - code
      - credit_hours
      - instructors
      - students
    question_type:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: MCQ
        easy_weight:
          type: integer
          example: 1
        medium_weight:
          type: integer
          example: 2
        hard_weight:
          type: integer
          example: 3
        is_deletable:
          type: boolean
          example: false
  errors:
    invalid_credentials:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Invalid credentials
    not_found:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Unfortunately this course does not exist or you do not have permissions
            to access
    unauthorized:
      type: array
      items:
        type: object
        properties:
          status:
            type: string
            example: error
          message:
            type: string
            example: Invalid credentials
      example:
      - status: error
        message: Invalid Credentials
      - status: error
        message: Unauthorized action!
    already_taken:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Name has already been taken
    bad_request:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Bad Request, Error message mentioned above
  responses:
    student_portal:
      show:
        student_session:
          type: object
          properties:
            status:
              type: string
              example: success
            student:
              "$ref": "#/components/schemas/student_session"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
        course_info:
          type: object
          properties:
            status:
              type: string
              example: success
            course_info:
              "$ref": "#/components/schemas/detailed_course_info"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
      list:
        courses_list:
          type: object
          properties:
            status:
              type: string
              example: success
            courses:
              type: array
              items:
                "$ref": "#/components/schemas/course"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
    staff_portal:
      show:
        staff_session:
          type: object
          properties:
            status:
              type: string
              example: success
            student:
              "$ref": "#/components/schemas/staff_session"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
        course_info:
          type: object
          properties:
            status:
              type: string
              example: success
            course_info:
              "$ref": "#/components/schemas/detailed_course_info"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
        question_type:
          type: object
          properties:
            status:
              type: string
              example: success
            question_type:
              "$ref": "#/components/schemas/question_type"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
      list:
        courses_list:
          type: object
          properties:
            status:
              type: string
              example: success
            courses:
              type: array
              items:
                "$ref": "#/components/schemas/course"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
        course_groups_list:
          type: object
          properties:
            status:
              type: string
              example: success
            course_groups:
              type: array
              items:
                "$ref": "#/components/schemas/course_group"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
        question_types:
          type: object
          properties:
            status:
              type: string
              example: success
            question_types:
              type: array
              items:
                "$ref": "#/components/schemas/question_type"
            message:
              type: string
              description: 'This message is the error message in case of status: "error"
                otherwise it is null'
              example: 
